<h1 class="title-text">Register</h1>
<div>
    <form action="/accounts/register" method="post" class="auth-form">
        <!--The required fields must be entered for the form to be submitted -->
        <label for="email">Enter your email address</label>
        <input type="email" name="email" id="email" required>

        <label for="fname">Enter Your First Name</label>
        <input type="text" name="fname" id="fname" required>

        <label for="lname">Enter Your Last Name</label>
        <input type="text" name="lname" id="lname" required>

        <label for="phone">Enter your phone number</label>
        <input type="tel" name="phone" id="phone" required>

        <label for="password">Enter a password</label>
        <input type="password" name="password" id="password" required onkeyup="validatePassword()">

        <label for="passwordReEnter">Verify your password</label>
        <input type="password" name="passwordReEnter" id="passwordReEnter" required>
        <!-- the submit button is disabled by default-->
        <input type="submit" value="Register" class="button" id="submit-button" disabled>
        <small>Been here before?<a href="/accounts/login" style="text-decoration: underline;">Login</a></small>

        <div id="password-rules">
            <p>Password must:</p>
            <ul class="password-rules">
                <li id="rule-length">Be at least 8 characters long</li>
                <li id="rule-uppercase">Contain at least 1 uppercase letter</li>
                <li id="rule-number">Contain at least 1 number</li>
                <li id="rule-special">Contain at least 1 special character<br>( !, @, #, $, %, ^, &, * )</li>
            </ul>
        </div>
    </form>
</div>

<script>

    /**
    * This function checks if the password and the re-entered password are the same
    */
    function validatePasswordReEntry(userPassword, reenteredPassword, submitButton) {
        const password = userPassword;
        const passwordReEnter = reenteredPassword;

        if (password === passwordReEnter && password.length >= 8 && /[A-Z]/.test(password) && /[0-9]/.test(password) && /[!@#$%^&*]/.test(password)) {
            submitButton.disabled = false;
        } else {
            submitButton.disabled = true;
        }
    }

    function validatePassword(userPassword) {
        const password = userPassword;
        const lengthRule = document.getElementById("rule-length");
        const uppercaseRule = document.getElementById("rule-uppercase");
        const numberRule = document.getElementById("rule-number");
        const specialRule = document.getElementById("rule-special");

        // These if statements change the styles of the password rules based on whether the password conforms

        if (password.length >= 8) {
            lengthRule.style.textDecoration = "line-through";
            lengthRule.style.color = "green";
        } else {
            lengthRule.style.textDecoration = "none";
            lengthRule.style.color = "red";
        }

        if (/[A-Z]/.test(password)) {
            uppercaseRule.style.textDecoration = "line-through";
            uppercaseRule.style.color = "green";
        } else {
            uppercaseRule.style.textDecoration = "none";
            uppercaseRule.style.color = "red";
        }

        if (/[0-9]/.test(password)) {
            numberRule.style.textDecoration = "line-through";
            numberRule.style.color = "green";
        } else {
            numberRule.style.textDecoration = "none";
            numberRule.style.color = "red";
        }

        if (/[!@#$%^&*]/.test(password)) {
            specialRule.style.textDecoration = "line-through";
            specialRule.style.color = "green";
        } else {
            specialRule.style.textDecoration = "none";
            specialRule.style.color = "red";
        }

        // Enable or disable the submit button based on password validation and matching passwords
        validatePasswordReEntry();

    }
    const submitButton = document.getElementById("submit-button");
    // This event listener ensures that the entire page is loaded first
    document.addEventListener("DOMContentLoaded", () => {


        // getting values from the password fields
        const passwordInput = document.getElementById("password");
        const passwordReEnterInput = document.getElementById("passwordReEnter");


        // Every time a keypress ends, run the functions
        passwordInput.addEventListener("keyup", () => validatePassword(passwordInput.value));
        passwordReEnterInput.addEventListener("keyup", () => validatePasswordReEntry(passwordInput.value, passwordReEnterInput.value, submitButton));

    });
</script>