<script type="module" src="https://ajax.googleapis.com/ajax/libs/model-viewer/3.1.1/model-viewer.min.js"></script>


<div class="prop-container">
    <div class="prop-image">
        <model-viewer src="/3dmodels/{{prop.model3d}}" loading="eager" ar ar-modes="webxr scene-viewer quick-look"
                      camera-controls poster="/3dmodels/{{prop.image}}" shadow-intensity="1" alt="{{prop.name}}"></model-viewer>
        <p class="model-toggle-note">Interact with the 3D model using touch or mouse.</p>
    
    </div>

    <div class="prop-details">
        <h1>{{prop.name}}</h1>
        <p>Description: {{prop.description}}</p>
        <p>Status: {{prop.status}}</p>
        <p>Quantity: {{ prop.numOfAvailable }}</p><br>
        <p>CA$ {{prop.price}}/day</p>
    <button class="addToCartBtn button" onclick="addToCart('{{prop.propId}}')">Add To Cart</button>
</div>
</div>

<script>
    const cartJson = localStorage.getItem("cart") || '[]';
    const cart = JSON.parse(cartJson);

    function checkAuthentication(callback) {
        fetch("/api/authenticated", {method: "GET"})
                .then((response) => response.json())
                .then((data) => {
                    const isAuthenticated = data.authenticated;
                    callback(isAuthenticated); // returns true to the callback function if the user is authenticated. False otherwise.
                })
                .catch((error) => {
                    console.error("Error checking authentication: ", error);
                    callback(false); // Assume the user is not authenticated if there is an error
                });
    }

    function showNotification(message, type = 'success') {
        const notification = document.createElement('div');
        notification.className = `notification notification-${type}`;
        notification.textContent = message;

        document.body.appendChild(notification);

        setTimeout(() => {
            notification.remove();
        }, 3000); 
    }

    function addToCart(propId) {
        checkAuthentication((isAuthenticated) => {
            if (isAuthenticated) {
                // if the user is authenticated then add the prop to the cart in the db.
                fetch(`/cart/add/${propId}`, {method: "POST"})
                        .then((response) => {
                            if (!response.ok) {
                                throw new Error("Server-side error");
                            }
                            updateCartCount();
                            console.log("Added to cart successfully");
                        })
                        .catch((error) => {
                            console.error("Error adding to cart: ", error);
                        });
            }
            // For both authenticated and non-authenticated users, the cart will be stored in local storage.
            cart.push(propId);
            let updatedCart = JSON.stringify(cart);
            localStorage.setItem("cart", updatedCart);
            showNotification("Prop added to cart successfully", 'success');
            updateCartCount();
            console.log("Added to local storage cart successfully");
        });
    }


    function reserve(propId) {
        checkAuthentication((isAuthenticated) => {
            if (isAuthenticated) {
                // if authenticated, allow user to reserve prop
                // take to payment processing from here
                window.location.href=`./${propId}/reserve`
            } else {
                window.location.href='/accounts/login'
            }
        })
    }
</script>
